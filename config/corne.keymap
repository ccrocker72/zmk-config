#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
&mt {
    tapping-term-ms = <300>;
};
/ {
    behaviors {
        td_lpar: tap_dance_left_paranthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LEFT_PARANTHESIS";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LPAR>, <&kp LBKT>, <&kp LBRC>;
        };
        td_rpar: tap_dance_right_paranthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RIGHT_PARANTHESIS";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RPAR>, <&kp RBKT>, <&kp RBRC>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_enter_1 {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp ENTER>;
        };
        combo_enter_2 {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp ENTER>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp TAB>;
        };
        combo_gui {
            timeout-ms = <50>;
            key-positions = <37 40>;
            bindings = <&kp LGUI>;
        };
    };
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
   &trans    &kp Q          &kp W         &kp E         &kp R        &kp T             &kp Y          &kp U        &kp I          &kp O       &kp P        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
   &trans    &kp A          &kp S         &kp D         &kp F        &kp G             &kp H          &kp J        &kp K          &kp L       &kp SQT      &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
   &trans    &kp Z          &kp X         &kp C         &kp V        &kp B             &kp N          &kp M        &kp COMMA      &kp DOT     &kp FSLH     &trans
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                          &kp LSHFT     &mo 1      &kp SPACE           &kp BSPC       &mo 2        &kp RSHFT
      //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >; 
                };
                numpad_layer {
                        bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
   &trans    &kp EXCL     &kp AT        &kp HASH      &kp DLLR       &kp GRAVE         &kp BSLH      &kp N7        &kp N8       &kp N9        &kp MINUS   &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
   &trans    &kp PRCNT    &kp CARET     &kp AMPS      &kp STAR       &kp TILDE         &kp STAR      &kp N4        &kp N5       &kp N6        &kp PLUS    &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
   &trans    &kp LC(Z)    &kp LC(X)     &kp LC(C)     &kp LC(V)      &none             &kp PLUS      &kp N1        &kp N2       &kp N3        &kp EQUAL   &trans
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                          &none        &none         &trans            &trans        &kp N0        &kp DOT      
      //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
                nav_symbol_layer {
                        bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
   &trans    &kp ESC      &kp F2      &kp C_VOL_DN    &kp LA(F4)  &kp C_VOL_UP        &none          &kp COLON    &kp UNDER    &kp MINUS    &kp EQUAL     &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
   &trans    &kp LC(A)    &kp LC(S)     &kp DEL       &kp LC(F)      &td_lpar         &kp PG_UP      &kp HOME     &kp UP       &kp END      &kp SEMI      &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
   &trans    &kp LC(Z)    &kp LC(X)     &kp LC(C)     &kp LC(V)      &td_rpar         &kp PG_DN      &kp LEFT     &kp DOWN     &kp RIGHT    &kp LC(FSLH)  &trans
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                         &kp LCTRL    &kp LSHFT      &trans           &trans         &none        &kp RALT      
      //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
        };
};
